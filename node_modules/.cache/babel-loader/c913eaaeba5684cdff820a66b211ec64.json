{"ast":null,"code":"var _jsxFileName = \"/Users/suneelrahman/Developer/perlman/contact-us/src/ContactForm.js\";\nimport React, { useState } from 'react';\nimport './ContactForm.css'; //import { useForm } from \"react-hook-form\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [explanation, setExplanation] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let data = [name, email, gender, explanation];\n\n    if (data.includes(\"\")) {\n      alert(\"All fields must not be empty.\");\n    } else {\n      //POST to URL from instructions\n      let url = \"https://httpbin.org/delay/3\";\n      let request = new XMLHttpRequest();\n      request.open('POST', url, true);\n      request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n      request.send(data); //On success, set the form to empty state and display a success message.\n\n      setName(\"\");\n      setEmail(\"\");\n      setGender(\"\");\n      setExplanation(\"\");\n      alert(\"Success!\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Contact Us\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Full Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"male\",\n    name: \"gender\",\n    value: \"male\",\n    onChange: e => setGender(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"female\",\n    name: \"gender\",\n    value: \"female\",\n    onChange: e => setGender(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Female\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"4\",\n    cols: \"50\",\n    placeholder: \"I am using this form because... \",\n    onChange: e => setExplanation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/suneelrahman/Developer/perlman/contact-us/src/ContactForm.js"],"names":["React","useState","ContactForm","name","setName","email","setEmail","gender","setGender","explanation","setExplanation","handleSubmit","event","preventDefault","data","includes","alert","url","request","XMLHttpRequest","open","setRequestHeader","send","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './ContactForm.css'\n//import { useForm } from \"react-hook-form\";\n\nfunction ContactForm(){\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\")\n  const [gender, setGender] = useState(\"\")\n  const [explanation, setExplanation] = useState(\"\")\n\n\n  const handleSubmit = (event)=>{\n    event.preventDefault();\n    let data = [name, email, gender, explanation]\n\n    if(data.includes(\"\")){\n      alert(\"All fields must not be empty.\")\n    } else {\n      //POST to URL from instructions\n      let url = \"https://httpbin.org/delay/3\"\n      let request = new XMLHttpRequest();\n      request.open('POST', url, true);\n      request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n      request.send(data);\n\n      //On success, set the form to empty state and display a success message.\n      setName(\"\");\n      setEmail(\"\");\n      setGender(\"\");\n      setExplanation(\"\");\n\n      alert(\"Success!\");\n    }\n  }\n\n\n  return(\n    <div class=\"background\">\n      <h1>Contact Us</h1>\n      <div class=\"centered\">\n        <form onSubmit={handleSubmit} >\n          <input type=\"text\" placeholder=\"Full Name\" value={name} onChange={e => setName(e.target.value)}></input>\n          <input type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)}></input>\n          <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" onChange={e => setGender(e.target.value)}></input>\n          <label for=\"male\">Male</label>\n          <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\" onChange={e => setGender(e.target.value)}></input>\n          <label for=\"female\">Female</label>\n          <textarea rows=\"4\" cols=\"50\" placeholder=\"I am using this form because... \" onChange={e => setExplanation(e.target.value)}></textarea>\n          <button>Submit</button>\n        </form>\n      </div>\n    </div>\n\n  )\n\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}